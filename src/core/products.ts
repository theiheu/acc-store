export type CategoryId = "all" | "gaming" | "social" | "productivity";

export const CATEGORIES: {
  id: Exclude<CategoryId, "all">;
  label: string;
  icon: string;
}[] = [
  { id: "gaming", label: "T√†i kho·∫£n Gaming", icon: "üéÆ" },
  { id: "social", label: "T√†i kho·∫£n Social Media", icon: "üì±" },
  { id: "productivity", label: "T√†i kho·∫£n Productivity", icon: "‚öôÔ∏è" },
];

// Optimized option structure with direct price and stock
export type ProductOption = {
  id: string;
  label: string;
  price: number; // Gi√° b√°n th·ª±c t·∫ø c·ªßa option n√†y
  stock: number; // S·ªë l∆∞·ª£ng t·ªìn kho c·ªßa option n√†y
  kioskToken?: string; // Token API ƒë·ªÉ mua s·∫£n ph·∫©m n√†y
  basePrice?: number; // Gi√° g·ªëc ƒë·ªÉ t√≠nh l·ª£i nhu·∫≠n
  profitMargin?: number; // % l·ª£i nhu·∫≠n
};

export type Product = {
  id: string;
  title: string;
  description: string;
  price?: number; // Optional - only used when no options available
  currency: string;
  imageEmoji?: string;
  imageUrl?: string; // optional thumbnail path under /public
  badge?: "new" | "hot"; // for highlighting
  longDescription?: string;
  faqs?: Array<{ q: string; a: string }>;
  category: Exclude<CategoryId, "all">;
  options?: ProductOption[]; // c√°c t√πy ch·ªçn s·∫£n ph·∫©m - primary pricing source
  // Admin fields (optional for backward compatibility)
  stock?: number; // Optional - only used when no options available
  sold?: number;
  isActive?: boolean;
  createdAt?: Date;
  updatedAt?: Date;
  createdBy?: string;
  lastModifiedBy?: string;
};

export const products: Product[] = [
  {
    id: "premium",
    title: "G√≥i T√†i Kho·∫£n Premium",
    description: "Full quy·ªÅn l·ª£i, b·∫£o h√†nh 7 ng√†y",
    price: 49000,
    currency: "VND",
    imageEmoji: "üéÆ",
    badge: "hot",
    imageUrl: "/thumbs/premium.svg",
    longDescription:
      "G√≥i Premium m·ªü kh√≥a to√†n b·ªô t√≠nh nƒÉng v√† nh·∫≠n h·ªó tr·ª£ ∆∞u ti√™n. Ph√π h·ª£p cho ng∆∞·ªùi d√πng y√™u c·∫ßu ·ªïn ƒë·ªãnh v√† b·∫£o h√†nh.",
    faqs: [
      { q: "B·∫£o h√†nh bao l√¢u?", a: "Trong 7 ng√†y k·ªÉ t·ª´ khi k√≠ch ho·∫°t." },
      { q: "C√≥ ƒë·ªïi ƒë∆∞·ª£c lo·∫°i kh√°c?", a: "Li√™n h·ªá h·ªó tr·ª£ ƒë·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n." },
    ],
    category: "gaming",
    options: [
      {
        id: "1month",
        label: "1 th√°ng",
        price: 49000,
        stock: 100,
        kioskToken: "demo_token_1month",
      },
      {
        id: "3months",
        label: "3 th√°ng - Ti·∫øt ki·ªám 15%",
        price: 69000,
        stock: 50,
        kioskToken: "demo_token_3months",
      },
      {
        id: "6months",
        label: "6 th√°ng - Ti·∫øt ki·ªám 25%",
        price: 84000,
        stock: 30,
        kioskToken: "demo_token_6months",
      },
      {
        id: "1year",
        label: "1 nƒÉm - Ti·∫øt ki·ªám 35%",
        price: 109000,
        stock: 20,
        kioskToken: "demo_token_1year",
      },
    ],
  },
  {
    id: "starter",
    title: "G√≥i Starter",
    description: "C∆° b·∫£n, ƒë·ªß d√πng",
    price: 19000,
    currency: "VND",
    imageEmoji: "‚ú®",
    badge: "new",
    imageUrl: "/thumbs/starter.svg",
    longDescription:
      "G√≥i Starter ph√π h·ª£p ƒë·ªÉ b·∫Øt ƒë·∫ßu tr·∫£i nghi·ªám d·ªãch v·ª• v·ªõi chi ph√≠ th·∫•p.",
    faqs: [
      { q: "C√≥ n√¢ng c·∫•p l√™n Premium?", a: "C√≥, b·∫°n c√≥ th·ªÉ n√¢ng c·∫•p sau." },
    ],
    category: "productivity",
    options: [
      {
        id: "basic",
        label: "C∆° b·∫£n",
        price: 19000,
        stock: 200,
        kioskToken: "demo_token_basic",
      },
      {
        id: "extended",
        label: "M·ªü r·ªông - Th√™m 5 t√≠nh nƒÉng",
        price: 29000,
        stock: 150,
        kioskToken: "demo_token_extended",
      },
    ],
  },
  {
    id: "simple-product",
    title: "S·∫£n ph·∫©m ƒë∆°n gi·∫£n",
    description: "S·∫£n ph·∫©m kh√¥ng c√≥ t√πy ch·ªçn - d√πng gi√° v√† kho ch√≠nh",
    price: 15000,
    stock: 50,
    currency: "VND",
    imageEmoji: "üì±",
    category: "tools",
    longDescription:
      "ƒê√¢y l√† v√≠ d·ª• v·ªÅ s·∫£n ph·∫©m ƒë∆°n gi·∫£n kh√¥ng c√≥ options, s·ª≠ d·ª•ng gi√° v√† kho c·ªßa s·∫£n ph·∫©m ch√≠nh.",
    faqs: [
      {
        q: "C√≥ t√πy ch·ªçn kh√¥ng?",
        a: "Kh√¥ng, ƒë√¢y l√† s·∫£n ph·∫©m ƒë∆°n gi·∫£n v·ªõi gi√° c·ªë ƒë·ªãnh.",
      },
    ],
    // No options - uses main product price and stock
  },
  {
    id: "tiktok",
    title: "T√†i kho·∫£n TikTok",
    description: "T√†i kho·∫£n TikTok x√°c minh c∆° b·∫£n",
    currency: "VND",
    imageEmoji: "üéµ",
    imageUrl: "/thumbs/tiktok.svg",
    longDescription: "T√†i kho·∫£n TikTok an to√†n, ph√π h·ª£p seeding v√† ch·∫°y trend.",
    faqs: [
      {
        q: "C√≥ x√°c minh s·∫µn?",
        a: "Lo·∫°i c∆° b·∫£n ch∆∞a x√°c minh, c√≥ th·ªÉ n√¢ng c·∫•p sau.",
      },
    ],
    category: "social",
    options: [
      {
        id: "unverified-0-1k",
        label: "Ch∆∞a x√°c minh, 0-1K followers",
        price: 29000,
        stock: 50,
        kioskToken: "demo_token_tiktok_basic",
      },
      {
        id: "unverified-1k-5k",
        label: "Ch∆∞a x√°c minh, 1K-5K followers",
        price: 37000,
        stock: 30,
        kioskToken: "demo_token_tiktok_1k",
      },
      {
        id: "verified-0-1k",
        label: "ƒê√£ x√°c minh (Tick xanh), 0-1K followers",
        price: 44000,
        stock: 20,
        kioskToken: "demo_token_tiktok_verified",
      },
      {
        id: "verified-5k-10k",
        label: "ƒê√£ x√°c minh (Tick xanh), 5K-10K followers",
        price: 64000,
        stock: 10,
        kioskToken: "demo_token_tiktok_premium",
      },
    ],
  },
  {
    id: "facebook",
    title: "T√†i kho·∫£n Facebook",
    description: "Facebook c√° nh√¢n an to√†n, d·ªÖ d√πng",
    price: 39000,
    currency: "VND",
    imageEmoji: "üìò",
    imageUrl: "/thumbs/facebook.svg",
    longDescription:
      "T√†i kho·∫£n Facebook c√° nh√¢n d√πng cho m·ª•c ƒë√≠ch th√¥ng th∆∞·ªùng.",
    faqs: [
      {
        q: "ƒê·ªïi email ƒë∆∞·ª£c kh√¥ng?",
        a: "T√πy lo·∫°i, vui l√≤ng li√™n h·ªá ƒë·ªÉ t∆∞ v·∫•n chi ti·∫øt.",
      },
    ],
    category: "social",
  },
  {
    id: "capcut-pro",
    title: "T√†i kho·∫£n CapCut Pro",
    description: "M·ªü kh√≥a ƒë·∫ßy ƒë·ªß t√≠nh nƒÉng Pro",
    price: 59000,
    currency: "VND",
    imageEmoji: "üé¨",
    imageUrl: "/thumbs/capcut.svg",
    longDescription:
      "T·∫≠n h∆∞·ªüng CapCut Pro v·ªõi ƒë·∫ßy ƒë·ªß preset v√† template cao c·∫•p.",
    faqs: [
      {
        q: "C√≥ t·ª± gia h·∫°n kh√¥ng?",
        a: "Kh√¥ng, ƒë√¢y l√† b·∫£n d√πng theo th·ªùi h·∫°n g√≥i.",
      },
    ],
    category: "productivity",
  },
];

export function getProductById(id?: string | null) {
  if (!id) return null;

  // For client-side or when dataStore is not available, use static products
  // The product detail page will fetch from API instead
  return products.find((p) => p.id === id) || null;
}

// Admin helper functions
export function getActiveProducts(): Product[] {
  return products.filter((p) => p.isActive !== false);
}

export function getProductsByCategory(category: CategoryId): Product[] {
  if (category === "all") return products;
  return products.filter((p) => p.category === category);
}

export function searchProducts(query: string): Product[] {
  const lowercaseQuery = query.toLowerCase();
  return products.filter(
    (p) =>
      p.title.toLowerCase().includes(lowercaseQuery) ||
      p.description.toLowerCase().includes(lowercaseQuery) ||
      p.longDescription?.toLowerCase().includes(lowercaseQuery)
  );
}

export function calculateProductPrice(
  product: Product,
  selectedOptionId?: string
): number {
  // If no options, return base product price (fallback to 0 if undefined)
  if (!product.options || product.options.length === 0) {
    return product.price || 0;
  }

  // If options exist, find the selected option and return its price
  if (selectedOptionId) {
    const selectedOption = product.options.find(
      (opt) => opt.id === selectedOptionId
    );
    if (selectedOption) {
      return selectedOption.price;
    }
  }

  // Fallback to first available option price or base price
  const firstOption =
    product.options.find((opt) => opt.stock > 0) || product.options[0];
  return firstOption ? firstOption.price : product.price || 0;
}
